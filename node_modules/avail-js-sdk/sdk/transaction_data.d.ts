import { ApiPromise } from "@polkadot/api";
import { H256 } from "@polkadot/types/interfaces/types";
import { Result } from "neverthrow";
export declare namespace DataAvailability {
    class SubmitData {
        data: string;
        constructor(data: string);
        static New(api: ApiPromise, txHash: H256, blockHash: H256): Promise<Result<SubmitData, string>>;
    }
}
export declare namespace Staking {
    class Nominate {
        targets: string[];
        constructor(targets: string[]);
        static New(api: ApiPromise, txHash: H256, blockHash: H256): Promise<Result<Nominate, string>>;
    }
}
