import { ApiPromise } from "@polkadot/api";
import { ISubmittableResult } from "@polkadot/types/types/extrinsic";
import { H256 } from "@polkadot/types/interfaces/types";
import { Result } from "neverthrow";
export declare enum WaitFor {
    BlockInclusion = 0,
    BlockFinalization = 1
}
export declare function standardCallback(result_in: ISubmittableResult, result_out: (value: Result<ISubmittableResult, string>) => void, waitFor: WaitFor): void;
export declare function getBlockHashAndTxHash(result: ISubmittableResult, waitFor: WaitFor, api: ApiPromise): Promise<[H256, number, H256, number]>;
export type GenericFailure = {
    isErr: true;
    reason: string;
};
export interface TransactionOptions {
    app_id?: number;
    nonce?: number;
    era?: number;
    blockHash?: H256;
}
